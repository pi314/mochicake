# 20122024 #
修改完成，可以用水球下指令了，目前讓 MochiCake 有兩個狀態，專心看魚和專心處理指令的狀態
進入指令狀態有兩個方式，一個是 master 把故鄉改成 MochiCake
另一個是 master 隨便丟一個水球給 MochiCake (第二個比較方便，但掉水球率很高)
實作 goto 指令
實作 remove 指令，用來刪魚
把 CLI 的指令也加了一些
回水球目前先用 ctrl+r，實作上比較方便，但以後要改掉
不小心把名單洗掉，還好之前 MochiCake 有寄過信給 master，所以就備份回來了，而且是用 reload 喔

# 20120223 #
故鄉的狀況又正常了，之後再確認狀況
考慮到故鄉實在太短，這次開始改用水球下指令（方法是檢查最下方一行
但如果 MochiCake 正在監看，水球會有非常高的機率不見
所以決定以 Master 的故鄉為準
若 Master 的故鄉為 'MochiCake'，MochiCake 就修改故鄉為 '待命！'，並專心監看水球
若 Master 的故鄉為其他值，MochiCake 就修改故鄉為 '看魚~'
因為太累了還沒實做，明天再繼續
另外需要修改 response 函式，改為水球，且不能用 ctrl+r，需要每次找到 master

# 20120222 #
增加 Command line interface，可以在 shell 端按下 ^C 後開始下指令，但還不完整，日後會增加更多指令
修改流程，增加一個函式 water 用來看魚，但一發現有指令就 return 該指令以及當前的畫面，然後進入處理指令的函式
待解決：
故鄉在下完指令後 1 秒變回 [看魚~]   預期應該是不變

# 20120218 #
編寫了一個函式 flatList
可以把 string list 依照欄數排好
用來輸出魚名單
增加 where 指令，用來回應 master MochiCake 所在的板
增加 seen 指令，格式為 [seen:{ID}]，用來回應 MochiCake 所在的板有沒有看過 {ID}
seen 指令是第一個有參數的指令

# 20130217 #
增加 list 指令
一樣需要用 ok 做確認
確認後，MochiCake 會把該板的魚名單用站內信寄給 master
但目前是一個 ID 一行，而不是 5 個 ID 一行

# 20130207 #
重構，把舊有功能完成
解決了一些 bug
term_comm 的 wait=True 是要確定畫面會更新才要加
不然有些狀況畫面不變的話，MochiCake 會 hang 住
現在已經可以下指令了，做了三個指令：logout, hello 和 reload
也更改了目錄結構
魚檔案用純文字而不用 pickle，以便直接 tail -f
記錄檔還沒製作，正在考慮必要性
加上了 .gitignore，今天不小心把 MochiCake.conf 給 push 上 github 了
裡面可是有帳號密碼啊ww

# 20130206 #
可以監看使用者名單
找出沒看過的板伴並加入檔案中
目錄結構未定
檔案格式未定
變數名稱未定
設定檔格式未定
正式取名 MochiCake

預期修改
在 github 上建立專案 (可在不同電腦上編寫
編寫 onCatchFish() 函式作為抓到魚時行為
把帳號密碼改用設定檔記錄

已在 github 上建立專案
https://github.com/pi314/mochicake
